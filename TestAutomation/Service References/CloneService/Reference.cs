//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestAutomation.CloneService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CloneService.IClone")]
    public interface IClone {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClone/CreateExhibitDatabase", ReplyAction="http://tempuri.org/IClone/CreateExhibitDatabaseResponse")]
        void CreateExhibitDatabase(int exhibitId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClone/CreateExhibitDatabase", ReplyAction="http://tempuri.org/IClone/CreateExhibitDatabaseResponse")]
        System.Threading.Tasks.Task CreateExhibitDatabaseAsync(int exhibitId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICloneChannel : TestAutomation.CloneService.IClone, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CloneClient : System.ServiceModel.ClientBase<TestAutomation.CloneService.IClone>, TestAutomation.CloneService.IClone {
        
        public CloneClient() {
        }
        
        public CloneClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CloneClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CloneClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CloneClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void CreateExhibitDatabase(int exhibitId) {
            base.Channel.CreateExhibitDatabase(exhibitId);
        }
        
        public System.Threading.Tasks.Task CreateExhibitDatabaseAsync(int exhibitId) {
            return base.Channel.CreateExhibitDatabaseAsync(exhibitId);
        }
    }
}
