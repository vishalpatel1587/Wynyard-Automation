//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestAutomation.ExhibitBookmarkService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ExhibitBookmarkList", Namespace="http://schemas.datacontract.org/2004/07/EVE.Data", ItemName="ExhibitBookmarkList.ExhibitBookmarkRow")]
    [System.SerializableAttribute()]
    public class ExhibitBookmarkList : System.Collections.Generic.List<TestAutomation.ExhibitBookmarkService.ExhibitBookmarkList.ExhibitBookmarkRow> {
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="ExhibitBookmarkList.ExhibitBookmarkRow", Namespace="http://schemas.datacontract.org/2004/07/EVE.Data")]
        [System.SerializableAttribute()]
        public partial class ExhibitBookmarkRow : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.DateTime CreatedDateField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int ExhibitBookmarkIdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string ExhibitBookmarkStatusField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string ExhibitBookmarkStatusCodeField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int ExhibitBookmarkStatusIdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int ExhibitIdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string ExhibitNumberField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int FileIdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string FileNameField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string FilePathField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool IsUacField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int UserIdField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.DateTime CreatedDate {
                get {
                    return this.CreatedDateField;
                }
                set {
                    if ((this.CreatedDateField.Equals(value) != true)) {
                        this.CreatedDateField = value;
                        this.RaisePropertyChanged("CreatedDate");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int ExhibitBookmarkId {
                get {
                    return this.ExhibitBookmarkIdField;
                }
                set {
                    if ((this.ExhibitBookmarkIdField.Equals(value) != true)) {
                        this.ExhibitBookmarkIdField = value;
                        this.RaisePropertyChanged("ExhibitBookmarkId");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string ExhibitBookmarkStatus {
                get {
                    return this.ExhibitBookmarkStatusField;
                }
                set {
                    if ((object.ReferenceEquals(this.ExhibitBookmarkStatusField, value) != true)) {
                        this.ExhibitBookmarkStatusField = value;
                        this.RaisePropertyChanged("ExhibitBookmarkStatus");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string ExhibitBookmarkStatusCode {
                get {
                    return this.ExhibitBookmarkStatusCodeField;
                }
                set {
                    if ((object.ReferenceEquals(this.ExhibitBookmarkStatusCodeField, value) != true)) {
                        this.ExhibitBookmarkStatusCodeField = value;
                        this.RaisePropertyChanged("ExhibitBookmarkStatusCode");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int ExhibitBookmarkStatusId {
                get {
                    return this.ExhibitBookmarkStatusIdField;
                }
                set {
                    if ((this.ExhibitBookmarkStatusIdField.Equals(value) != true)) {
                        this.ExhibitBookmarkStatusIdField = value;
                        this.RaisePropertyChanged("ExhibitBookmarkStatusId");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int ExhibitId {
                get {
                    return this.ExhibitIdField;
                }
                set {
                    if ((this.ExhibitIdField.Equals(value) != true)) {
                        this.ExhibitIdField = value;
                        this.RaisePropertyChanged("ExhibitId");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string ExhibitNumber {
                get {
                    return this.ExhibitNumberField;
                }
                set {
                    if ((object.ReferenceEquals(this.ExhibitNumberField, value) != true)) {
                        this.ExhibitNumberField = value;
                        this.RaisePropertyChanged("ExhibitNumber");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int FileId {
                get {
                    return this.FileIdField;
                }
                set {
                    if ((this.FileIdField.Equals(value) != true)) {
                        this.FileIdField = value;
                        this.RaisePropertyChanged("FileId");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string FileName {
                get {
                    return this.FileNameField;
                }
                set {
                    if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                        this.FileNameField = value;
                        this.RaisePropertyChanged("FileName");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string FilePath {
                get {
                    return this.FilePathField;
                }
                set {
                    if ((object.ReferenceEquals(this.FilePathField, value) != true)) {
                        this.FilePathField = value;
                        this.RaisePropertyChanged("FilePath");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool IsUac {
                get {
                    return this.IsUacField;
                }
                set {
                    if ((this.IsUacField.Equals(value) != true)) {
                        this.IsUacField = value;
                        this.RaisePropertyChanged("IsUac");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int UserId {
                get {
                    return this.UserIdField;
                }
                set {
                    if ((this.UserIdField.Equals(value) != true)) {
                        this.UserIdField = value;
                        this.RaisePropertyChanged("UserId");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExhibitBookmarkArgs", Namespace="http://schemas.datacontract.org/2004/07/EVE.Serialization.Search")]
    [System.SerializableAttribute()]
    public partial class ExhibitBookmarkArgs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int ExhibitIdk__BackingFieldField;
        
        private int FileIdk__BackingFieldField;
        
        private string FileNamek__BackingFieldField;
        
        private string FilePathk__BackingFieldField;
        
        private bool IsUack__BackingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ExhibitId>k__BackingField", IsRequired=true)]
        public int ExhibitIdk__BackingField {
            get {
                return this.ExhibitIdk__BackingFieldField;
            }
            set {
                if ((this.ExhibitIdk__BackingFieldField.Equals(value) != true)) {
                    this.ExhibitIdk__BackingFieldField = value;
                    this.RaisePropertyChanged("ExhibitIdk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<FileId>k__BackingField", IsRequired=true)]
        public int FileIdk__BackingField {
            get {
                return this.FileIdk__BackingFieldField;
            }
            set {
                if ((this.FileIdk__BackingFieldField.Equals(value) != true)) {
                    this.FileIdk__BackingFieldField = value;
                    this.RaisePropertyChanged("FileIdk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<FileName>k__BackingField", IsRequired=true)]
        public string FileNamek__BackingField {
            get {
                return this.FileNamek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNamek__BackingFieldField, value) != true)) {
                    this.FileNamek__BackingFieldField = value;
                    this.RaisePropertyChanged("FileNamek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<FilePath>k__BackingField", IsRequired=true)]
        public string FilePathk__BackingField {
            get {
                return this.FilePathk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.FilePathk__BackingFieldField, value) != true)) {
                    this.FilePathk__BackingFieldField = value;
                    this.RaisePropertyChanged("FilePathk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<IsUac>k__BackingField", IsRequired=true)]
        public bool IsUack__BackingField {
            get {
                return this.IsUack__BackingFieldField;
            }
            set {
                if ((this.IsUack__BackingFieldField.Equals(value) != true)) {
                    this.IsUack__BackingFieldField = value;
                    this.RaisePropertyChanged("IsUack__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExhibitBookmarkStatus", Namespace="http://schemas.datacontract.org/2004/07/EVE.Common")]
    public enum ExhibitBookmarkStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bookmarked = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ForReview = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reviewed = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ExhibitBookmarkService.IExhibitBookmark")]
    public interface IExhibitBookmark {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExhibitBookmark/GetExhibitBookmark_Bookmarks", ReplyAction="http://tempuri.org/IExhibitBookmark/GetExhibitBookmark_BookmarksResponse")]
        TestAutomation.ExhibitBookmarkService.ExhibitBookmarkList GetExhibitBookmark_Bookmarks(int[] exhibitBookmarkId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExhibitBookmark/GetExhibitBookmark", ReplyAction="http://tempuri.org/IExhibitBookmark/GetExhibitBookmarkResponse")]
        TestAutomation.ExhibitBookmarkService.ExhibitBookmarkList.ExhibitBookmarkRow GetExhibitBookmark(int exhibitBookmarkId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExhibitBookmark/GetExhibitBookmark_File", ReplyAction="http://tempuri.org/IExhibitBookmark/GetExhibitBookmark_FileResponse")]
        TestAutomation.ExhibitBookmarkService.ExhibitBookmarkList.ExhibitBookmarkRow GetExhibitBookmark_File(int exhibitId, int fileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExhibitBookmark/GetExhibitBookmark_Files", ReplyAction="http://tempuri.org/IExhibitBookmark/GetExhibitBookmark_FilesResponse")]
        TestAutomation.ExhibitBookmarkService.ExhibitBookmarkList GetExhibitBookmark_Files(int exhibitId, int[] fileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExhibitBookmark/InsertExhibitBookmark", ReplyAction="http://tempuri.org/IExhibitBookmark/InsertExhibitBookmarkResponse")]
        void InsertExhibitBookmark(TestAutomation.ExhibitBookmarkService.ExhibitBookmarkArgs[] bookmarks, int[] tags, TestAutomation.ExhibitBookmarkService.ExhibitBookmarkStatus bookmarkStatus, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExhibitBookmark/GetExhibitBookmark_UserCase", ReplyAction="http://tempuri.org/IExhibitBookmark/GetExhibitBookmark_UserCaseResponse")]
        TestAutomation.ExhibitBookmarkService.ExhibitBookmarkList GetExhibitBookmark_UserCase(int caseId, int[] userIds, int pageNumber, int pageSize, string orderBy, bool includeUac);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExhibitBookmark/GetExhibitBookmark_UserCaseCount", ReplyAction="http://tempuri.org/IExhibitBookmark/GetExhibitBookmark_UserCaseCountResponse")]
        int GetExhibitBookmark_UserCaseCount(int caseId, int userId, bool includeUac);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExhibitBookmark/DeleteExhibitBookmark", ReplyAction="http://tempuri.org/IExhibitBookmark/DeleteExhibitBookmarkResponse")]
        void DeleteExhibitBookmark(int exhibitBookmarkId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExhibitBookmark/GetExhibitBookmark_CaseTag", ReplyAction="http://tempuri.org/IExhibitBookmark/GetExhibitBookmark_CaseTagResponse")]
        TestAutomation.ExhibitBookmarkService.ExhibitBookmarkList GetExhibitBookmark_CaseTag(int caseId, int bookmarkTagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExhibitBookmark/GetExhibitBookmark_CaseTagCount", ReplyAction="http://tempuri.org/IExhibitBookmark/GetExhibitBookmark_CaseTagCountResponse")]
        int GetExhibitBookmark_CaseTagCount(int caseId, int bookmarkTagId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IExhibitBookmarkChannel : TestAutomation.ExhibitBookmarkService.IExhibitBookmark, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExhibitBookmarkClient : System.ServiceModel.ClientBase<TestAutomation.ExhibitBookmarkService.IExhibitBookmark>, TestAutomation.ExhibitBookmarkService.IExhibitBookmark {
        
        public ExhibitBookmarkClient() {
        }
        
        public ExhibitBookmarkClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ExhibitBookmarkClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExhibitBookmarkClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExhibitBookmarkClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TestAutomation.ExhibitBookmarkService.ExhibitBookmarkList GetExhibitBookmark_Bookmarks(int[] exhibitBookmarkId) {
            return base.Channel.GetExhibitBookmark_Bookmarks(exhibitBookmarkId);
        }
        
        public TestAutomation.ExhibitBookmarkService.ExhibitBookmarkList.ExhibitBookmarkRow GetExhibitBookmark(int exhibitBookmarkId) {
            return base.Channel.GetExhibitBookmark(exhibitBookmarkId);
        }
        
        public TestAutomation.ExhibitBookmarkService.ExhibitBookmarkList.ExhibitBookmarkRow GetExhibitBookmark_File(int exhibitId, int fileId) {
            return base.Channel.GetExhibitBookmark_File(exhibitId, fileId);
        }
        
        public TestAutomation.ExhibitBookmarkService.ExhibitBookmarkList GetExhibitBookmark_Files(int exhibitId, int[] fileId) {
            return base.Channel.GetExhibitBookmark_Files(exhibitId, fileId);
        }
        
        public void InsertExhibitBookmark(TestAutomation.ExhibitBookmarkService.ExhibitBookmarkArgs[] bookmarks, int[] tags, TestAutomation.ExhibitBookmarkService.ExhibitBookmarkStatus bookmarkStatus, int userId) {
            base.Channel.InsertExhibitBookmark(bookmarks, tags, bookmarkStatus, userId);
        }
        
        public TestAutomation.ExhibitBookmarkService.ExhibitBookmarkList GetExhibitBookmark_UserCase(int caseId, int[] userIds, int pageNumber, int pageSize, string orderBy, bool includeUac) {
            return base.Channel.GetExhibitBookmark_UserCase(caseId, userIds, pageNumber, pageSize, orderBy, includeUac);
        }
        
        public int GetExhibitBookmark_UserCaseCount(int caseId, int userId, bool includeUac) {
            return base.Channel.GetExhibitBookmark_UserCaseCount(caseId, userId, includeUac);
        }
        
        public void DeleteExhibitBookmark(int exhibitBookmarkId) {
            base.Channel.DeleteExhibitBookmark(exhibitBookmarkId);
        }
        
        public TestAutomation.ExhibitBookmarkService.ExhibitBookmarkList GetExhibitBookmark_CaseTag(int caseId, int bookmarkTagId) {
            return base.Channel.GetExhibitBookmark_CaseTag(caseId, bookmarkTagId);
        }
        
        public int GetExhibitBookmark_CaseTagCount(int caseId, int bookmarkTagId) {
            return base.Channel.GetExhibitBookmark_CaseTagCount(caseId, bookmarkTagId);
        }
    }
}
