// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TestAutomation.Features.GUI.Home
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("CheckHomePageContent")]
    [NUnit.Framework.CategoryAttribute("guiTest")]
    [NUnit.Framework.CategoryAttribute("loginAsAdmin")]
    [NUnit.Framework.CategoryAttribute("CheckHomePageContent")]
    public partial class CheckHomePageContentFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CheckHomePageContent.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "CheckHomePageContent", "Description:\r\nThe Home page of DEI shoud contain the following text.\r\n\r\n*Backgrou" +
                    "nd:I have logged in as an admin user.", ProgrammingLanguage.CSharp, new string[] {
                        "guiTest",
                        "loginAsAdmin",
                        "CheckHomePageContent"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check Home page contains text")]
        [NUnit.Framework.CategoryAttribute("CheckPageContainsText")]
        [NUnit.Framework.TestCaseAttribute("Cases", null)]
        public virtual void CheckHomePageContainsText(string expectedText, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "CheckPageContainsText"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check Home page contains text", @__tags);
#line 9
this.ScenarioSetup(scenarioInfo);
#line 10
 testRunner.When("I look at the Home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
 testRunner.Then(string.Format("I should be able to see \'{0}\' text", expectedText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check Home page contains Links")]
        [NUnit.Framework.CategoryAttribute("CheckPageContainsLinks")]
        [NUnit.Framework.TestCaseAttribute("Recent Activity", null)]
        [NUnit.Framework.TestCaseAttribute("System Messages", null)]
        public virtual void CheckHomePageContainsLinks(string expectedText, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "CheckPageContainsLinks"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check Home page contains Links", @__tags);
#line 18
this.ScenarioSetup(scenarioInfo);
#line 19
 testRunner.When("I look at the Home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 20
 testRunner.Then(string.Format("I should be able to see \'{0}\' Links", expectedText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check the Recent Activity Page")]
        [NUnit.Framework.CategoryAttribute("CheckRecentActivityPage")]
        public virtual void CheckTheRecentActivityPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check the Recent Activity Page", new string[] {
                        "CheckRecentActivityPage"});
#line 28
this.ScenarioSetup(scenarioInfo);
#line 29
 testRunner.When("I go to the \'Recent Activity\' Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 30
 testRunner.Then("the \'Recent Activity\' page should contain \'Action\' and \'Description\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check the System Messages Page")]
        [NUnit.Framework.CategoryAttribute("CheckSystemMessagePage")]
        public virtual void CheckTheSystemMessagesPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check the System Messages Page", new string[] {
                        "CheckSystemMessagePage"});
#line 33
this.ScenarioSetup(scenarioInfo);
#line 34
 testRunner.When("I go to the \'System Messages\' Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 35
 testRunner.Then("the \'System Messages\' page should contain \'Date\' and \'Subject\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
