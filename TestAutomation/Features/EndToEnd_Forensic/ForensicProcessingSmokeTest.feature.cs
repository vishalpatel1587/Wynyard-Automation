// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TestAutomation.Features.EndToEnd_Forensic
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("ForensicProcessingSmokeTest")]
    [NUnit.Framework.CategoryAttribute("smokeTest")]
    [NUnit.Framework.CategoryAttribute("ForensicProcessingSmokeTest")]
    public partial class ForensicProcessingSmokeTestFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ForensicProcessingSmokeTest.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ForensicProcessingSmokeTest", @"
The Forensic smoke test checks that the number of files is correct in each of the Metadata Tables in this Forensic Exhibit database.
After the Exhibit is processed the processing time measured from Work table is being recorded to ExhibitProcessingTime.csv file.
The details of all files under FileMetadata table are checked to be the same as the expected data from the csv file.", ProgrammingLanguage.CSharp, new string[] {
                        "smokeTest",
                        "ForensicProcessingSmokeTest"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("An Exhibit is processed")]
        [NUnit.Framework.CategoryAttribute("ProcessExhibit")]
        public virtual void AnExhibitIsProcessed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An Exhibit is processed", new string[] {
                        "ProcessExhibit"});
#line 9
this.ScenarioSetup(scenarioInfo);
#line 10
 testRunner.When("I process an Exhibit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
 testRunner.Then("the processing time has been recorded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check number of files in FileMetadata table")]
        [NUnit.Framework.CategoryAttribute("CheckNumberOfFilesInFileMetadataTable")]
        public virtual void CheckNumberOfFilesInFileMetadataTable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check number of files in FileMetadata table", new string[] {
                        "CheckNumberOfFilesInFileMetadataTable"});
#line 14
this.ScenarioSetup(scenarioInfo);
#line 15
 testRunner.When("I check \'FileMetadata\' table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 16
 testRunner.Then("the number of processed files is correct in \'FileMetadata\' table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check number of files in ImageMetadata table")]
        [NUnit.Framework.CategoryAttribute("CheckNumberOfFilesInImageMetadataTable")]
        public virtual void CheckNumberOfFilesInImageMetadataTable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check number of files in ImageMetadata table", new string[] {
                        "CheckNumberOfFilesInImageMetadataTable"});
#line 19
this.ScenarioSetup(scenarioInfo);
#line 20
 testRunner.When("I check \'ImageMetadata\' table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 21
 testRunner.Then("the number of processed files is correct in \'ImageMetadata\' table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check porn probability of files in ImageMetadata table")]
        [NUnit.Framework.CategoryAttribute("CheckPornProbabilityOfFilesInImageMetadataTable")]
        public virtual void CheckPornProbabilityOfFilesInImageMetadataTable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check porn probability of files in ImageMetadata table", new string[] {
                        "CheckPornProbabilityOfFilesInImageMetadataTable"});
#line 24
this.ScenarioSetup(scenarioInfo);
#line 25
 testRunner.When("I check \'ImageMetadata\' table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 26
 testRunner.Then("the porn probability values of all processed files are not NULL and not -1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check number of files in PdfMetadata table")]
        [NUnit.Framework.CategoryAttribute("CheckNumberOfFilesInPdfMetadataTable")]
        public virtual void CheckNumberOfFilesInPdfMetadataTable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check number of files in PdfMetadata table", new string[] {
                        "CheckNumberOfFilesInPdfMetadataTable"});
#line 29
this.ScenarioSetup(scenarioInfo);
#line 30
 testRunner.When("I check \'PdfMetadata\' table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 31
 testRunner.Then("the number of processed files is correct in \'PdfMetadata\' table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check number of files in VideoMetadata table")]
        [NUnit.Framework.CategoryAttribute("CheckNumberOfFilesInVideoMetadataTable")]
        public virtual void CheckNumberOfFilesInVideoMetadataTable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check number of files in VideoMetadata table", new string[] {
                        "CheckNumberOfFilesInVideoMetadataTable"});
#line 34
this.ScenarioSetup(scenarioInfo);
#line 35
 testRunner.When("I check \'VideoMetadata\' table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 36
 testRunner.Then("the number of processed files is correct in \'VideoMetadata\' table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check number of files in InternetMetadata table")]
        [NUnit.Framework.CategoryAttribute("CheckNumberOfFilesInInternetMetadataTable")]
        public virtual void CheckNumberOfFilesInInternetMetadataTable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check number of files in InternetMetadata table", new string[] {
                        "CheckNumberOfFilesInInternetMetadataTable"});
#line 39
this.ScenarioSetup(scenarioInfo);
#line 40
 testRunner.When("I check \'InternetMetadata\' table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 41
 testRunner.Then("the number of processed files is correct in \'InternetMetadata\' table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check number of files in PartitionMetadata table")]
        [NUnit.Framework.CategoryAttribute("CheckNumberOfFilesInPartitionMetadataTable")]
        public virtual void CheckNumberOfFilesInPartitionMetadataTable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check number of files in PartitionMetadata table", new string[] {
                        "CheckNumberOfFilesInPartitionMetadataTable"});
#line 44
this.ScenarioSetup(scenarioInfo);
#line 45
 testRunner.When("I check \'PartitionMetadata\' table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 46
 testRunner.Then("the number of processed files is correct in \'PartitionMetadata\' table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CheckProcessedFileDetails")]
        [NUnit.Framework.CategoryAttribute("CheckProcessedFileDetails")]
        public virtual void CheckProcessedFileDetails()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CheckProcessedFileDetails", new string[] {
                        "CheckProcessedFileDetails"});
#line 49
this.ScenarioSetup(scenarioInfo);
#line 50
 testRunner.When("the csv file with the expected Media file details data exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 51
 testRunner.Then("the processed file details are correct in FileMetadata table as per the csv file", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
