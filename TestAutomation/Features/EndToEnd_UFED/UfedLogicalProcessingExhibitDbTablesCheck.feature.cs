// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TestAutomation.Features.EndToEnd_UFED
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Ufed Logical Processing ExhibitDb Tables Check")]
    [NUnit.Framework.CategoryAttribute("smokeTest")]
    [NUnit.Framework.CategoryAttribute("UfedLogicalProcessingExhibitDbTablesCheck")]
    public partial class UfedLogicalProcessingExhibitDbTablesCheckFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "UfedLogicalProcessingExhibitDbTablesCheck.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Ufed Logical Processing ExhibitDb Tables Check", @"
The Ufed smoke test checks that Entity, ConnectionEvent and all Metadata tables are populated correctly after the UFED exhibit processing.
After the Exhibit is processed the processing time measured from Work table is being recorded to ExhibitProcessingTime.csv file.
The details of all files under FileMetadata table are checked to be the same as the expected data from the csv file.

The test config file and the expected data files are located under Steps\EndToEndTest\TestData\UfedSmokeTestExhibit.", ProgrammingLanguage.CSharp, new string[] {
                        "smokeTest",
                        "UfedLogicalProcessingExhibitDbTablesCheck"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("An Exhibit is processed")]
        [NUnit.Framework.CategoryAttribute("ProcessExhibit")]
        public virtual void AnExhibitIsProcessed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An Exhibit is processed", new string[] {
                        "ProcessExhibit"});
#line 11
this.ScenarioSetup(scenarioInfo);
#line 12
 testRunner.When("I process an Exhibit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 13
 testRunner.Then("the processing time has been recorded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check number of files in Entity table")]
        [NUnit.Framework.CategoryAttribute("CheckNumberOfFilesInEntityTable")]
        public virtual void CheckNumberOfFilesInEntityTable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check number of files in Entity table", new string[] {
                        "CheckNumberOfFilesInEntityTable"});
#line 16
this.ScenarioSetup(scenarioInfo);
#line 17
 testRunner.When("I check \'Entity\' table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 18
 testRunner.Then("the number of processed files is correct in \'Entity\' table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check number of certain EntityName entries in Entity table")]
        [NUnit.Framework.CategoryAttribute("CheckNumberOfCertainEntityNameEntriesInEntityTable")]
        public virtual void CheckNumberOfCertainEntityNameEntriesInEntityTable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check number of certain EntityName entries in Entity table", new string[] {
                        "CheckNumberOfCertainEntityNameEntriesInEntityTable"});
#line 21
this.ScenarioSetup(scenarioInfo);
#line 22
 testRunner.When("I check \'Entity\' table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 23
 testRunner.Then("the number of expected EntityName entries is correct in \'Entity\' table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check number of files in ConnectionEvent table")]
        [NUnit.Framework.CategoryAttribute("CheckNumberOfFilesInConnectionEventTable")]
        public virtual void CheckNumberOfFilesInConnectionEventTable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check number of files in ConnectionEvent table", new string[] {
                        "CheckNumberOfFilesInConnectionEventTable"});
#line 26
this.ScenarioSetup(scenarioInfo);
#line 27
 testRunner.When("I check \'ConnectionEvent\' table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 28
 testRunner.Then("the number of processed files is correct in \'ConnectionEvent\' table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check number of certain ConnectionTypeId entries in ConnectionEvent table")]
        [NUnit.Framework.CategoryAttribute("CheckNumberOfCertainConnectionTypeIdEntriesInConnectionEventTable")]
        public virtual void CheckNumberOfCertainConnectionTypeIdEntriesInConnectionEventTable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check number of certain ConnectionTypeId entries in ConnectionEvent table", new string[] {
                        "CheckNumberOfCertainConnectionTypeIdEntriesInConnectionEventTable"});
#line 31
this.ScenarioSetup(scenarioInfo);
#line 32
 testRunner.When("I check \'ConnectionEvent\' table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 33
 testRunner.Then("the number of expected ConnectionTypeId entries is correct in \'ConnectionEvent\' t" +
                    "able", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check number of files in FileMetadata table")]
        [NUnit.Framework.CategoryAttribute("CheckNumberOfFilesInFileMetadataTable")]
        public virtual void CheckNumberOfFilesInFileMetadataTable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check number of files in FileMetadata table", new string[] {
                        "CheckNumberOfFilesInFileMetadataTable"});
#line 36
this.ScenarioSetup(scenarioInfo);
#line 37
 testRunner.When("I check \'FileMetadata\' table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 38
 testRunner.Then("the number of processed files is correct in \'FileMetadata\' table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check number of files in ImageMetadata table")]
        [NUnit.Framework.CategoryAttribute("CheckNumberOfFilesInImageMetadataTable")]
        public virtual void CheckNumberOfFilesInImageMetadataTable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check number of files in ImageMetadata table", new string[] {
                        "CheckNumberOfFilesInImageMetadataTable"});
#line 41
this.ScenarioSetup(scenarioInfo);
#line 42
 testRunner.When("I check \'ImageMetadata\' table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 43
 testRunner.Then("the number of processed files is correct in \'ImageMetadata\' table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check number of files in PdfMetadata table")]
        [NUnit.Framework.CategoryAttribute("CheckNumberOfFilesInPdfMetadataTable")]
        public virtual void CheckNumberOfFilesInPdfMetadataTable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check number of files in PdfMetadata table", new string[] {
                        "CheckNumberOfFilesInPdfMetadataTable"});
#line 46
this.ScenarioSetup(scenarioInfo);
#line 47
 testRunner.When("I check \'PdfMetadata\' table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 48
 testRunner.Then("the number of processed files is correct in \'PdfMetadata\' table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check number of files in VideoMetadata table")]
        [NUnit.Framework.CategoryAttribute("CheckNumberOfFilesInVideoMetadataTable")]
        public virtual void CheckNumberOfFilesInVideoMetadataTable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check number of files in VideoMetadata table", new string[] {
                        "CheckNumberOfFilesInVideoMetadataTable"});
#line 51
this.ScenarioSetup(scenarioInfo);
#line 52
 testRunner.When("I check \'VideoMetadata\' table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 53
 testRunner.Then("the number of processed files is correct in \'VideoMetadata\' table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check number of files in InternetMetadata table")]
        [NUnit.Framework.CategoryAttribute("CheckNumberOfFilesInInternetMetadataTable")]
        public virtual void CheckNumberOfFilesInInternetMetadataTable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check number of files in InternetMetadata table", new string[] {
                        "CheckNumberOfFilesInInternetMetadataTable"});
#line 56
this.ScenarioSetup(scenarioInfo);
#line 57
 testRunner.When("I check \'InternetMetadata\' table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 58
 testRunner.Then("the number of processed files is correct in \'InternetMetadata\' table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check number of files in PartitionMetadata table")]
        [NUnit.Framework.CategoryAttribute("CheckNumberOfFilesInPartitionMetadataTable")]
        public virtual void CheckNumberOfFilesInPartitionMetadataTable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check number of files in PartitionMetadata table", new string[] {
                        "CheckNumberOfFilesInPartitionMetadataTable"});
#line 61
this.ScenarioSetup(scenarioInfo);
#line 62
 testRunner.When("I check \'PartitionMetadata\' table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 63
 testRunner.Then("the number of processed files is correct in \'PartitionMetadata\' table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CheckProcessedFileDetails")]
        [NUnit.Framework.CategoryAttribute("CheckProcessedFileDetails")]
        public virtual void CheckProcessedFileDetails()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CheckProcessedFileDetails", new string[] {
                        "CheckProcessedFileDetails"});
#line 66
this.ScenarioSetup(scenarioInfo);
#line 67
 testRunner.When("the csv file with the expected Media file details data exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 68
 testRunner.Then("the processed file details are correct in FileMetadata table as per the csv file", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
